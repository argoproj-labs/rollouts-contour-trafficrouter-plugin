# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Contour plugin CI
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

env:
  GOLANG_VERSION: '1.21'

jobs:
  init-variable:
    runs-on: ubuntu-latest
    outputs:
      container_tag: ${{ steps.init_variable.outputs.container_tag }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: output environment variable
        id: init_variable
        run: |
          echo container_tag=$(git describe --tags --abbrev=8) >> $GITHUB_OUTPUT

  unit-tests:
    name: Unit tests running
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GOLANG_VERSION }}

      - name: Checkout code
        uses: actions/checkout@v3.1.0

      - name: Unit tests running
        run: |
          go test -v ./...

  linting:
    name: Go code linting
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GOLANG_VERSION }}

      - name: Checkout code
        uses: actions/checkout@v3.1.0

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          args: --verbose --timeout 6m
    
  build:
    name: Build creation
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GOLANG_VERSION }}

      - name: Checkout code
        uses: actions/checkout@v3.1.0

      - name: Build creation
        run: |
          go build -v
